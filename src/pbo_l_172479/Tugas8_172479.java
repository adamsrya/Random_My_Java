/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pbo_l_172479;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRField;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JRRewindableDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Adam
 */
public class Tugas8_172479 extends javax.swing.JFrame {

    /**
     * Creates new form Tugas8_172479
     */
    
    public Tugas8_172479() {
        initComponents();
        GetData();
         
    }
    
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gol = new javax.swing.JComboBox<>();
        pcari = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        keluar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(350, 120));

        gol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-NONE-", "Teknik Informatika", "Sistem Informasi", "Manajemen", "Rekayasa Perangkat Lunak" }));
        gol.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                golItemStateChanged(evt);
            }
        });

        pcari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pcariKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pcariKeyTyped(evt);
            }
        });

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);

        keluar.setText("Keluar");
        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });

        jButton1.setText("Cetak");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pcari, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(keluar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pcari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keluar)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    private void pcariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pcariKeyTyped
      
    }//GEN-LAST:event_pcariKeyTyped

    private void golItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_golItemStateChanged
       
         DefaultTableModel mdl = new DefaultTableModel();
        mdl.addColumn("NIP");
        mdl.addColumn("Nama");
        mdl.addColumn("Jurusan");
        mdl.addColumn("Tempat");
        mdl.addColumn("Tanggal Lahir");
        mdl.addColumn("Alamat");
        mdl.addColumn("NO.HP");
        mdl.addColumn("JKEL");
        if(gol.getSelectedItem()=="Teknik Informatika"){
            try{ 
            String sql ="SELECT * FROM mhs_172479 WHERE NOT(jurusan='Sistem Informasi' OR jurusan='Manajemen' OR jurusan='Rekaya Perangkat Lunak') ORDER BY jurusan";
            PreparedStatement PS = koneksi.koneksiDB().prepareStatement(sql);
            ResultSet RS = PS.executeQuery();
            int no=0;
            while(RS.next()){
            no++;    
            mdl.addRow(new Object[]{
                                      RS.getString("nim"),
                                      RS.getString("nama"),
                                      RS.getString("jurusan"),
                                      RS.getString("tmptlahir"),
                                      RS.getString("tgllahir"),
                                      RS.getString("alamat"),
                                      RS.getString("tlp"),
                                      RS.getString("jk"),});
            }
             tabel.setModel(mdl);
        } catch (Exception e) {
        }
        }else if (gol.getSelectedItem()=="Sistem Informasi"){
             try{ 
            String sql ="SELECT * FROM mhs_172479 WHERE NOT(jurusan='Teknik Informatika' OR jurusan='Manajemen' OR jurusan='Rekaya Perangkat Lunak') ORDER BY jurusan";
            PreparedStatement PS = koneksi.koneksiDB().prepareStatement(sql);
            ResultSet RS = PS.executeQuery();
            int no=0;
            while(RS.next()){
            no++;    
            mdl.addRow(new Object[]{
                                      RS.getString("nim"),
                                      RS.getString("nama"),
                                      RS.getString("jurusan"),
                                      RS.getString("tmptlahir"),
                                      RS.getString("tgllahir"),
                                      RS.getString("alamat"),
                                      RS.getString("tlp"),
                                      RS.getString("jk"),});
            }
             tabel.setModel(mdl);
        } catch (Exception e) {
        }
        }else if(gol.getSelectedItem()=="Manajemen"){
             try{ 
            String sql ="SELECT * FROM mhs_172479 WHERE NOT(jurusan='Sistem Informasi' OR jurusan='Teknik Informatika' OR jurusan='Rekaya Perangkat Lunak') ORDER BY jurusan";
            PreparedStatement PS = koneksi.koneksiDB().prepareStatement(sql);
            ResultSet RS = PS.executeQuery();
            int no=0;
            while(RS.next()){
            no++;    
            mdl.addRow(new Object[]{
                                      RS.getString("nim"),
                                      RS.getString("nama"),
                                      RS.getString("jurusan"),
                                      RS.getString("tmptlahir"),
                                      RS.getString("tgllahir"),
                                      RS.getString("alamat"),
                                      RS.getString("tlp"),
                                      RS.getString("jk"),});
            }
             tabel.setModel(mdl);
        } catch (Exception e) {
        }
        }else if(gol.getSelectedItem()=="Rekayasa Perangkat Lunak"){
             try{ 
            String sql ="SELECT * FROM mhs_172479 WHERE NOT(jurusan='Sistem Informasi' OR jurusan='Manajemen' OR jurusan='Teknik Informatika') ORDER BY jurusan";
            PreparedStatement PS = koneksi.koneksiDB().prepareStatement(sql);
            ResultSet RS = PS.executeQuery();
            int no=0;
            while(RS.next()){
            no++;    
            mdl.addRow(new Object[]{
                                      RS.getString("nim"),
                                      RS.getString("nama"),
                                      RS.getString("jurusan"),
                                      RS.getString("tmptlahir"),
                                      RS.getString("tgllahir"),
                                      RS.getString("alamat"),
                                      RS.getString("tlp"),
                                      RS.getString("jk"),});
            }
             tabel.setModel(mdl);
        } catch (Exception e) {
        }
        }else if(gol.getSelectedItem()=="-NONE-"){
             try{ 
            String sql ="select * from mhs_172479 ORDER BY id DESC";
            PreparedStatement PS = koneksi.koneksiDB().prepareStatement(sql);
            ResultSet RS = PS.executeQuery();
            int no=0;
            while(RS.next()){
            no++;    
            mdl.addRow(new Object[]{
                                      RS.getString("nim"),
                                      RS.getString("nama"),
                                      RS.getString("jurusan"),
                                      RS.getString("tmptlahir"),
                                      RS.getString("tgllahir"),
                                      RS.getString("alamat"),
                                      RS.getString("tlp"),
                                      RS.getString("jk"),});
            }
             tabel.setModel(mdl);
        } catch (Exception e) {
        }
        }
    }//GEN-LAST:event_golItemStateChanged

    private void pcariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pcariKeyReleased
     
        DefaultTableModel mdl = new DefaultTableModel();
        mdl.addColumn("NIP");
        mdl.addColumn("Nama");
        mdl.addColumn("Jurusan");
        mdl.addColumn("Tempat");
        mdl.addColumn("Tanggal Lahir");
        mdl.addColumn("Alamat");
        mdl.addColumn("NO.HP");
        mdl.addColumn("JKEL");
       try {
            String ad = pcari.getText().trim();
            String sql ="select * from mhs_172479 WHERE nim LIKE '"+ad+"%' or nama LIKE '"+ad+"%' or tmptlahir LIKE '"+ad+"%' or alamat LIKE '"+ad+"%' "
                    + "or jk LIKE '"+ad+"%' ORDER BY id ASC";
            PreparedStatement PS = koneksi.koneksiDB().prepareStatement(sql);
            ResultSet RS = PS.executeQuery();
            int no=0;
            while(RS.next()){
            no++;    
            mdl.addRow(new Object[]{
                                      RS.getString("nim"),
                                      RS.getString("nama"),
                                      RS.getString("jurusan"),
                                      RS.getString("tmptlahir"),
                                      RS.getString("tgllahir"),
                                      RS.getString("alamat"),
                                      RS.getString("tlp"),
                                      RS.getString("jk"),});
            }
             tabel.setModel(mdl);
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_pcariKeyReleased

    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
        this.dispose();
    }//GEN-LAST:event_keluarActionPerformed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        try {
        DefaultTableModel mdl = new DefaultTableModel();
        mdl.addColumn("NIP");
        mdl.addColumn("Nama");
        mdl.addColumn("Jurusan");
        mdl.addColumn("Tempat");
        mdl.addColumn("Tanggal Lahir");
        mdl.addColumn("Alamat");
        mdl.addColumn("NO.HP");
        mdl.addColumn("JKEL");
        JTable tabell = new JTable(mdl);
        Map dam = new HashMap();
        JRDataSource dataa = new JRTableModelDataSource(tabell.getModel());
        
            JasperPrint jp = JasperFillManager.fillReport("C:\\Users\\PC\\Documents\\NetBeansProjects\\PBO_L_172479\\src\\laporan\\Tugas9-172479.jasper",null,koneksi.koneksiDB());
            JasperViewer.viewReport(jp,true);
        } catch (JRException ex) {
            Logger.getLogger(Tugas8_172479.class.getName()).log(Level.SEVERE, null, ex);
        }
        
     
                
    }//GEN-LAST:event_tabelMouseClicked

     
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        JasperPrint JP =null;
        try {
        JasperCompileManager.compileReport("C:\\Users\\PC\\Documents\\NetBeansProjects\\PBO_L_172479\\src\\laporan\\Tugas9-172479.jasper");
        JP = JasperFillManager.fillReport("C:\\Users\\PC\\Documents\\NetBeansProjects\\PBO_L_172479\\src\\laporan\\Tugas9-172479.jasper", new HashMap(),new JRTableModelDataSource((TableModel) tabel));
        JasperViewer JV = new JasperViewer(JP);
        JV.setVisible(true);
        }catch (Exception e) {
            
        }

    }//GEN-LAST:event_jButton1ActionPerformed
public void GetData() {
         // membuat tampilan model tabel
        DefaultTableModel mdl = new DefaultTableModel();
        mdl.addColumn("NIP");
        mdl.addColumn("Nama");
        mdl.addColumn("Jurusan");
        mdl.addColumn("Tempat");
        mdl.addColumn("Tanggal Lahir");
        mdl.addColumn("Alamat");
        mdl.addColumn("NO.HP");
        mdl.addColumn("JKEL");
       
        

        
        //menampilkan data database kedalam tabel
        try {
            
            String sql = "select * from mhs_172479 ORDER BY id DESC";
            PreparedStatement PS = koneksi.koneksiDB().prepareStatement(sql);
            ResultSet RS = PS.executeQuery();
            while(RS.next()){
            mdl.addRow(new Object[]{
                                      RS.getString(2),
                                      RS.getString(3),
                                      RS.getString(4),
                                      RS.getString(5),
                                      RS.getString(6),
                                      RS.getString(7),
                                      RS.getString(8),
                                      RS.getString(9),});
            }
             tabel.setModel(mdl);
        } catch (Exception e) {
        } }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tugas8_172479.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tugas8_172479.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tugas8_172479.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tugas8_172479.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tugas8_172479().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> gol;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton keluar;
    private javax.swing.JTextField pcari;
    private javax.swing.JTable tabel;
    // End of variables declaration//GEN-END:variables
}
